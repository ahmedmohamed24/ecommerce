{
  "swagger": "2.0",
  "info":
    {
      "description": "This is an API project for building e-commerce in Laravel with TTD",
      "version": "1.0.5",
      "title": "Egy E-commerce",
      "termsOfService": "http://swagger.io/terms/",
      "contact": { "email": "ahmedmohamed.developer1997@gmail.com" },
      "license":
        {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
        },
    },
  "host": "egy.codes",
  "basePath": "/",
  "tags":
    [
      { "name": "User", "description": "Customer authentication" },
      {
        "name": "User shopping",
        "description": "Customers visiting products and purchasing",
      },
      { "name": "Admin", "description": "Admin Authentication" },
      {
        "name": "Admin Dashboard",
        "description": "Admin Dashboard for managing the store",
      },
      { "name": "Vendor", "description": "Vendor Authentication" },
      {
        "name": "Vendor services",
        "description": "Vendors selling their products",
      },
    ],
  "schemes": ["https", "http"],
  "paths":
    {
      "/register":
        {
          "post":
            {
              "tags": ["User"],
              "summary": "registers for new user",
              "description": "",
              "operationId": "",
              "consumes": ["multipart/form-data"],
              "produces": ["application/json"],
              "parameters":
                [
                  {
                    "name": "_token",
                    "in": "formData",
                    "description": "csrf token verification",
                    "required": true,
                    "type": "string",
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "successful operation",
                      "schema": { "$ref": "#/definitions/ApiResponse" },
                    },
                },
            },
        },
      "/user":
        {
          "post":
            {
              "tags": ["user"],
              "summary": "Create user",
              "description": "This can only be done by the logged in user.",
              "operationId": "createUser",
              "consumes": ["application/json"],
              "produces": ["application/json", "application/xml"],
              "parameters":
                [
                  {
                    "in": "body",
                    "name": "body",
                    "description": "Created user object",
                    "required": true,
                    "schema": { "$ref": "#/definitions/User" },
                  },
                ],
              "responses":
                { "default": { "description": "successful operation" } },
            },
        },
    },
  "securityDefinitions":
    {
      "api_key": { "type": "apiKey", "name": "api_key", "in": "header" },
      "petstore_auth":
        {
          "type": "oauth2",
          "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
          "flow": "implicit",
          "scopes":
            {
              "read:pets": "read your pets",
              "write:pets": "modify pets in your account",
            },
        },
    },
  "definitions":
    {
      "ApiResponse":
        {
          "type": "object",
          "properties":
            {
              "code": { "type": "integer", "format": "int32" },
              "type": { "type": "string" },
              "message": { "type": "string" },
            },
        },
      "Category":
        {
          "type": "object",
          "properties":
            {
              "id": { "type": "integer", "format": "int64" },
              "name": { "type": "string" },
            },
          "xml": { "name": "Category" },
        },
      "Pet":
        {
          "type": "object",
          "required": ["name", "photoUrls"],
          "properties":
            {
              "id": { "type": "integer", "format": "int64" },
              "category": { "$ref": "#/definitions/Category" },
              "name": { "type": "string", "example": "doggie" },
              "photoUrls":
                {
                  "type": "array",
                  "xml": { "wrapped": true },
                  "items": { "type": "string", "xml": { "name": "photoUrl" } },
                },
              "tags":
                {
                  "type": "array",
                  "xml": { "wrapped": true },
                  "items":
                    { "xml": { "name": "tag" }, "$ref": "#/definitions/Tag" },
                },
              "status":
                {
                  "type": "string",
                  "description": "pet status in the store",
                  "enum": ["available", "pending", "sold"],
                },
            },
          "xml": { "name": "Pet" },
        },
      "Tag":
        {
          "type": "object",
          "properties":
            {
              "id": { "type": "integer", "format": "int64" },
              "name": { "type": "string" },
            },
          "xml": { "name": "Tag" },
        },
      "Order":
        {
          "type": "object",
          "properties":
            {
              "id": { "type": "integer", "format": "int64" },
              "petId": { "type": "integer", "format": "int64" },
              "quantity": { "type": "integer", "format": "int32" },
              "shipDate": { "type": "string", "format": "date-time" },
              "status":
                {
                  "type": "string",
                  "description": "Order Status",
                  "enum": ["placed", "approved", "delivered"],
                },
              "complete": { "type": "boolean" },
            },
          "xml": { "name": "Order" },
        },
      "User":
        {
          "type": "object",
          "properties":
            {
              "id": { "type": "integer", "format": "int64" },
              "username": { "type": "string" },
              "firstName": { "type": "string" },
              "lastName": { "type": "string" },
              "email": { "type": "string" },
              "password": { "type": "string" },
              "phone": { "type": "string" },
              "userStatus":
                {
                  "type": "integer",
                  "format": "int32",
                  "description": "User Status",
                },
            },
          "xml": { "name": "User" },
        },
    },
  "externalDocs":
    {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
}
